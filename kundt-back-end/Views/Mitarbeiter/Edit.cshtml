@model kundt_back_end.Models.tblMitarbeiter

@{
    ViewBag.Title = "Edit";
}

<h2>Mitarbeiter Bearbeiten</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tblMitarbeiter</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDMitarbeiter)

        @*Vorname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAVorname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MAVorname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MAVorname, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Nachname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MANachname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MANachname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MANachname, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Anrede*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAAnrede, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Anrede", new List<SelectListItem>
     {new SelectListItem { Text = "Herr", Value = "Herr", Selected = true},
       new SelectListItem { Text = "Frau", Value = "Frau"}
       })
            </div> @* Das Dropdown wird auf Anrede gesetzt und gibt entweder Herr Value oder Frau Value die übergeben werden. *@
        </div>
        @*Email*@
        <div class="form-group">
            @Html.LabelFor(model => model.tblLogin.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tblLogin.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tblLogin.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Passwort ändern*@
        <div class="form-group">
            @Html.LabelFor(model => model.tblLogin.Passwort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tblLogin.Passwort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tblLogin.Passwort, "", new { @class = "text-danger" })
            </div>
            @*Password abgleichen*@
            @*<div class="form-group">
                @Html.LabelFor(model => model.tblLogin.Passwort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tblLogin.Passwort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tblLogin.Passwort, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Zurück zur Übersicht", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
