@model kundt_back_end.Models.MitarbeiterModel

@{
    ViewBag.Title = "Edit";
}
<script>
    function PasswortReset() {

        document.getElementByName("Passwort").value = "PasswortResetten";
        @*document.getElementByName("Passwort2").innerHTML = '<hidden>@Html.Hidden("Model.Passwort", "PasswortResetten")</hidden>';*@
    }
</script>



<h2>Mitarbeiter Bearbeiten</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tblMitarbeiter</h4>
        <hr />
        @*@Html.HiddenFor(model => model.Rolle,"",)
            @Html.HiddenFor(model => model.Rolle, new { id = "natureOfVisitField", value = "M" })*@
        <input type="hidden" name="Rolle" value="@Model.Rolle" />
        @*Übergibt die Rolle von View an die Prozedur im Controller*@

        @*Vorname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAVorname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MAVorname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MAVorname, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Nachname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MANachname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MANachname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MANachname, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Anrede *@
        <div class="form-group">
            @Html.LabelFor(model => model.MAAnrede, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Im Model wird diese dropdown Liste erzeugt über AnredeOptionen *@
                @Html.DropDownList("MAAnrede", Model.AnredeOptionen, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MAAnrede, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Email*@
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Passwort ändern*@


        <button onclick="PasswortReset()">Passwort Resetten</button>
        <input type="hidden" name="Passwort" value="@Model.Passwort" />


        @*Password abgleichen*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.tblLogin.Passwort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tblLogin.Passwort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tblLogin.Passwort, "", new { @class = "text-danger" })
            </div>*@

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Zurück zur Übersicht", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
