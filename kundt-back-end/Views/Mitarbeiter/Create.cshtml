@model kundt_back_end.Models.MitarbeiterModel

@{
    ViewBag.Title = "Create";
}
<script>

    function checkEmail() {

        var email = document.getElementById('txtEmail');
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

        if (!filter.test(email.value)) {
            alert('Please provide a valid email address');
            email.focus;
            return false;
        }
    }
</script>

<style>
    .validationMSG{
        display:inline-block;
    }
</style>

<h2>Mitarbeiter Anlegen</h2>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.IDMitarbeiter, "IDMitarbeiter", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">

                @*@Html.EditorForModel()*@
                @*Schnelle Variante da immer alle tbl Daten raus geholt werden aus der Tabelle!*@
            </div>
        </div>
        @* @*Mitarbeiter ID Nötig???
            <div class="form-group">
                @Html.LabelFor(model => model.IDMitarbeiter, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IDMitarbeiter, new { htmlAttributes = new { @class = "form-control validationMSG"  } })
                    @Html.ValidationMessageFor(model => model.IDMitarbeiter, "", new { @class = "text-danger" })
                </div> </div>*@

        @*Mitarbeiter Vorname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAVorname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MAVorname, new { htmlAttributes = new { @class = "form-control validationMSG"  } })
                @Html.ValidationMessageFor(model => model.MAVorname, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Mitarbeiter Nachname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MANachname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MANachname, new { htmlAttributes = new { @class = "form-control validationMSG"  } })
                @Html.ValidationMessageFor(model => model.MANachname, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Mitarbeiter Anrede*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAAnrede, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Anrede", new List<SelectListItem>
                { new SelectListItem { Text = "Herr", Value = "Herr", Selected = true},
                  new SelectListItem { Text = "Frau", Value = "Frau"}})
            </div>
        </div>
        @*Login Email *@
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control validationMSG" , onsubmit = "checkEmail();" } }) @*Vielleicht Probleme mit onsubmit???*@
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Login Passwort*@
        <div class="form-group">
            @Html.LabelFor(model => model.Passwort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passwort, new { htmlAttributes = new { @class = "form-control validationMSG"  } })
                @Html.ValidationMessageFor(model => model.Passwort, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Create Button*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Zurück zur Übersicht", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*TO DO
    Procedur für die Email noch ein Betten
    Java Script Abgleichung ob Email auch nach Email ausschaut
*@