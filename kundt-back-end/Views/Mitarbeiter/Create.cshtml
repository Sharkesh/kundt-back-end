@model kundt_back_end.Models.MitarbeiterModel
@* Hier wird zur Validirungs Klasse MitarbeiterModel gemampt*@
@{
    ViewBag.Title = "Mitarbeiter Hinzufügen";
}
<style>
    .EditDisplayWidth {
        max-width: 280px;
    }
</style>

<h2>Mitarbeiter Anlegen</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @*@Html.EditorForModel()*@
                @*Schnelle Variante da immer alle tbl Daten raus geholt werden aus der Tabelle!*@
            </div>
        </div>
        @*Mitarbeiter Vorname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAVorname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MAVorname, new { htmlAttributes = new { @class = "form-control validationMSG" } })
                @Html.ValidationMessageFor(model => model.MAVorname, "", new { @class = "text-danger" })
                @* EditorFor erzeugt eine Texbox zum eingaben von Informationen. Über das Model.MaVorname wird der Angezeigte Name und die verbindung zum Vornamen generirt. *@
            </div>
        </div>
        @*Mitarbeiter Nachname*@
        <div class="form-group">
            @Html.LabelFor(model => model.MANachname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MANachname, new { htmlAttributes = new { @class = "form-control validationMSG" } })
                @Html.ValidationMessageFor(model => model.MANachname, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Mitarbeiter Anrede*@
        <div class="form-group">
            @Html.LabelFor(model => model.MAAnrede, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Im Model wird diese dropdown Liste erzeugt über AnredeOptionen *@
                @Html.DropDownList("MAAnrede", Model.AnredeOptionen, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MAAnrede, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Login Email *@
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control validationMSG" } }) @*Vielleicht Probleme mit onsubmit???*@
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Login Passwort*@
        <div class="form-group">
            @Html.LabelFor(model => model.Passwort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" id="Passwort" name="Passwort" class="form-control input EditDisplayWidth" />
                @*@Html.PasswordFor(model => model.Passwort, new { htmlAttributes = new { @class = "form-control validationMSG" } })*@
                @Html.ValidationMessageFor(model => model.Passwort, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Create Button*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Zurück zur Übersicht", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

