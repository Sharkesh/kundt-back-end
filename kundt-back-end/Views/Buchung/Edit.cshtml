@model kundt_back_end.Models.tblBuchung

@{
    ViewBag.Title = "Edit";
}

<style>
    .EditDisplayWidth {
        max-width: 280px;
    }

    .buttonOrangeNextStep {
        background-color: #f99b1c;
        border: none;
        color: #ffffff;
        font-size: 15px;
        height: 50px;
        width: 200px;
        font-weight: 700;
        letter-spacing: .5px;
        text-align: center;
        display: inline-block;
        border-radius: 4px;
    }

    .headingFormat {
        margin: auto auto 20px auto;
        color: white;
        background-color: #f99b1c;
        vertical-align: middle;
        padding: 0px;
        border-radius: 4px;
        box-shadow: lightgray 1px 1px 0px;
        text-align: center;
    }

    .disabledField {
        background-color: lightgray;
    }
</style>

<div class="headingFormat">
    <h2>Buchung bearbeiten</h2>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDBuchung)
        <div class="form-group">
            @Html.LabelFor(model => model.BuchungAm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p name="BuchungAm" id="BuchungAm" class="form-control input EditDisplayWidth disabledField">
                    @Model.BuchungAm
                </p>
            </div>
        </div>

        <!--
             Datumspicker im Editbereich muss noch konfiguriert werden dass
            das DatumBis nicht < als DatumVon sein kann sonst gibt es eine Exception
            beim speichern in die Datenbank
            
            Abklären ob dieser Problemfall im Controller ausreichend behandelt wurde!
        -->

        <div class="form-group">
            @Html.LabelFor(model => model.BuchungVon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BuchungVon, new { htmlAttributes = new { @class = "form-control"} })*@
                

                <input type="date" id="BuchungVon" name="BuchungVon" value="@Model.BuchungVon.ToString("yyyy-MM-dd")" class="form-control input EditDisplayWidth" />
                @Html.ValidationMessageFor(model => model.BuchungVon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BuchungBis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">               
                @*@Html.EditorFor(model => model.BuchungBis, new { htmlAttributes = new { @class = "form-control" } })*@
                @* class form-control muss beim style der wert von Display: auf inline-block geschalten werden *@
                <input type="date" id="BuchungBis" name="BuchungBis" value="@Model.BuchungBis.ToString("yyyy-MM-dd")" class="form-control input EditDisplayWidth" />
                @Html.ValidationMessageFor(model => model.BuchungBis, "", new { @class = "text-danger" })
                @if (TempData["fail"] != null)
                {
                    <span class="text-danger">@TempData["fail"].ToString()</span>
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FKKunde, "KundenNr.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p name="KundeId" id="KundeId" class="form-control input EditDisplayWidth disabledField">
                    @Model.tblKunde.IDKunde
                </p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tblAuto.MietPreis, "MietPreis", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p name="MietPreis" id="MietPreis" class="form-control input EditDisplayWidth disabledField">
                    @Model.tblAuto.MietPreis
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tage, "Mietdauer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p name="MietDauer" id="MietDauer" class="form-control input EditDisplayWidth disabledField">
                    @Model.Tage Tage
                </p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BuchungStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuchungStatus", Model.options, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuchungStatus, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Storno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Storno)
                    @Html.ValidationMessageFor(model => model.Storno, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Versicherung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Versicherung)
                    @Html.ValidationMessageFor(model => model.Versicherung, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="container" style="margin-top:50px;">
            <div class="row">
                <center>
                    <div class="col-lg-4">
                        <form action="@Url.Action("Index", "Buchung")">
                            <button class="buttonOrangeNextStep">
                                <span>Zurück zur Buchungen Übersicht</span>
                            </button>
                        </form>
                    </div>
                    <div>
                        <div class="col-lg-4">
                            <input type="submit" value="Save" class="btn buttonOrangeNextStep" />
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <form action="@Url.Action("Index", "BuchungUebersicht")">
                            <button class="buttonOrangeNextStep">
                                <span>Zurück zur Übersicht</span>
                            </button>
                        </form>
                    </div>
                </center>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
