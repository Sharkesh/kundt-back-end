@model kundt_back_end.Models.BuchungEditModel

@{
    ViewBag.Title = "Buchung Bearbeiten";
}

<style>
    .EditDisplayWidth {
        max-width: 280px;
    }

    .buttonOrangeForward {
        background-color: #f99b1c;
        border: none;
        color: #ffffff;
        font-size: 15px;
        height: 50px;
        width: 200px;
        font-weight: 700;
        letter-spacing: .5px;
        text-align: center;
        display: inline-block;
        border-radius: 4px;
    }

        .buttonOrangeForward span {
            cursor: pointer;
            display: inline-block;
            position: relative;
            transition: 0.5s;
        }

            .buttonOrangeForward span:after {
                content: '\00bb';
                position: absolute;
                opacity: 0;
                top: 0;
                right: -30px;
                transition: 0.5s;
                font-size: 15px;
            }

        .buttonOrangeForward:hover span {
            padding-right: 15px;
        }

            .buttonOrangeForward:hover span:after {
                opacity: 1;
                right: 0;
            }

    .buttonOrangeReturn {
        background-color: #f99b1c;
        border: none;
        color: #ffffff;
        font-size: 15px;
        height: 50px;
        width: 200px;
        font-weight: 700;
        letter-spacing: .5px;
        text-align: center;
        display: inline-block;
        border-radius: 4px;
    }

        .buttonOrangeReturn span {
            cursor: pointer;
            display: inline-block;
            position: relative;
            transition: 0.5s;
        }

            .buttonOrangeReturn span:after {
                content: '\00ab';
                position: absolute;
                opacity: 0;
                top: 0;
                left: -30px;
                transition: 0.5s;
                font-size: 15px;
            }

        .buttonOrangeReturn:hover span {
            padding-left: 15px;
        }

            .buttonOrangeReturn:hover span:after {
                opacity: 1;
                left: 0;
            }

        .buttonOrangeReturn:hover {
            background-color: #f99b1c;
            border: none;
            color: #ffffff;
            font-size: 15px;
            height: 50px;
            width: 200px;
            font-weight: 700;
            letter-spacing: .5px;
            text-align: center;
        }


    .buttonOrangeSave {
        background-color: #f99b1c;
        border: none;
        color: #ffffff;
        font-size: 15px;
        height: 50px;
        width: 200px;
        font-weight: 700;
        letter-spacing: .5px;
        text-align: center;
        border-radius: 5px;
    }

        .buttonOrangeSave:hover {
            background-color: #f99b1c;
            border: none;
            color: #ffffff;
            font-size: 15px;
            height: 50px;
            width: 200px;
            font-weight: 700;
            letter-spacing: .5px;
            text-align: center;
            opacity: 0.7;
            border-radius: 5px;
        }

    .headingFormat {
        margin: auto auto 20px auto;
        color: white;
        background-color: #f99b1c;
        vertical-align: middle;
        padding: 0px;
        border-radius: 4px;
        box-shadow: lightgray 1px 1px 0px;
        text-align: center;
    }

    .disabledField {
        background-color: #eee;
    }
</style>

<div class="headingFormat">
    <h2 style="padding:5px;">Buchung bearbeiten</h2>
</div>

<div class="container" style="padding-top:20px;padding-bottom:20px;">
    <div class="row col-md-12">
        <div class="col-md-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal col-md-12">
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.IDBuchung)
                        <div class="form-group">
                            @Html.LabelFor(model => model.IDBuchung, "Buchungsnummer:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="IDBuchung" id="IDBuchung" class="form-control input EditDisplayWidth disabledField">
                                    @Model.IDBuchung
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BuchungAm, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="BuchungAm" id="BuchungAm" class="form-control input EditDisplayWidth disabledField">
                                    @Model.BuchungAm
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BuchungVon, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @*@Html.EditorFor(model => model.BuchungVon, new { htmlAttributes = new { @class = "form-control"} })*@
                                <input type="date" id="BuchungVon" name="BuchungVon" value="@Model.BuchungVon.ToString("yyyy-MM-dd")" class="form-control input EditDisplayWidth" />
                                @Html.ValidationMessageFor(model => model.BuchungVon, "", new { @class = "text-danger" })
                                @if (TempData["bVfail"] != null)
                                {
                                    <span class="text-danger">@TempData["bVfail"].ToString()</span>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BuchungBis, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @*@Html.EditorFor(model => model.BuchungBis, new { htmlAttributes = new { @class = "form-control" } })*@
                                @* class form-control muss beim style der wert von Display: auf inline-block geschalten werden *@
                                <input type="date" id="BuchungBis" name="BuchungBis" value="@Model.BuchungBis.ToString("yyyy-MM-dd")" class="form-control input EditDisplayWidth" />
                                @Html.ValidationMessageFor(model => model.BuchungBis, "", new { @class = "text-danger" })
                                @if (TempData["fail"] != null)
                                {
                                    <span class="text-danger">@TempData["fail"].ToString()</span>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FKKunde, "KundenNr.:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="KundeId" id="KundeId" class="form-control input EditDisplayWidth disabledField">
                                    @Model.FKKunde
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4">Kundenname:</label>
                            <div class="col-md-8">
                                <div name="name" id="name" class="form-control input EditDisplayWidth disabledField">
                                    @Model.Vorname @Model.Nachname
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Tage, "Mietdauer:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="MietDauer" id="MietDauer" class="form-control input EditDisplayWidth disabledField">
                                    @if (Model.Tage == 1)
                                    {
                                        ViewBag.tage = "Tag";
                                    }
                                    else
                                    {
                                        ViewBag.tage = "Tage";
                                    }
                                    @Model.Tage @ViewBag.tage
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4">Buchungsstatus:</label>
                            <div class="col-md-8">
                                <div class="form-control input EditDisplayWidth disabledField">@Model.BuchungStatus</div>
                                @*@Html.LabelFor(model => model.BuchungStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownList("BuchungStatus", Model.options, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BuchungStatus, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        @if (Model.BuchungStatus == "erstellt")
                        {
                            <div class="form-group">
                                <label class="control-label col-md-4">Auto Abgeholt</label>
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.abgeholt)
                                        @Html.ValidationMessageFor(model => model.abgeholt, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.BuchungStatus == "abgeholt")
                        {
                            <div class="form-group">
                                <label class="control-label col-md-4">Auto Rückgabe</label>
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.zurueck)
                                        @Html.ValidationMessageFor(model => model.zurueck, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.BuchungStatus == "zurueck")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Storno, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.DisplayFor(model => model.Storno)
                                        @Html.ValidationMessageFor(model => model.Storno, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.BuchungStatus == "erstellt")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Storno, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Storno)
                                        @Html.ValidationMessageFor(model => model.Storno, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.BuchungStatus == "erstellt")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Versicherung, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Versicherung)
                                        @Html.ValidationMessageFor(model => model.Versicherung, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.BuchungStatus == "abgeholt")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Versicherung, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <div class="checkbox">
                                        @Html.DisplayFor(model => model.Versicherung)
                                        @Html.ValidationMessageFor(model => model.Versicherung, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BMarke, "Marke:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="BMarke" id="BMarke" class="form-control input EditDisplayWidth disabledField">
                                    @Model.BMarke
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BTyp, "Typ:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="BTyp" id="BTyp" class="form-control input EditDisplayWidth disabledField">
                                    @Model.BTyp
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BKategorie, "Kategorie:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="BKategorie" id="BKategorie" class="form-control input EditDisplayWidth disabledField">
                                    @Model.BKategorie
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MietPreis, "Mietpreis:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="MietPreis" id="MietPreis" class="form-control input EditDisplayWidth disabledField">
                                    @Model.MietPreis €
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Gesamtpreis, "Gesamtpreis:", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div name="Gesamtpreis" id="Gesamtpreis" class="form-control input EditDisplayWidth disabledField">
                                    @Model.Gesamtpreis €
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div style="padding-left:150px;">
                                @{
                                    var image = Convert.ToBase64String(Model.BAutoBild);
                                }
                                @Html.Raw("<img src=\"data:" + Model.BAutoBild + ";base64," + image + "\" class=\"img-responsive\" />")
                            </div>
                        </div>
                    </div>
                    <div class="container" style="margin-top:20px;">
                        <div class="row col-md-12">
                            <center>
                                <div class="col-lg-4">
                                    <a href="@Url.Action("Index", "Buchung")">
                                        <button type="button" class="buttonOrangeReturn" value="Zurück zu Buchungen"><span>Zurück zu Buchungen</span></button>
                                    </a>
                                </div>
                                <div>
                                    <div class="col-lg-4">
                                        <button type="submit" value="Save" class="buttonOrangeSave"><span>Aktualisieren</span></button>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <a href="@Url.Action("AutoBearbeiten", "tblAuto", new { id = Model.BIDAuto })">
                                        <button type="button" class="buttonOrangeForward" value="Zurück zur Übersicht"><span>Zum Auto</span></button>
                                    </a>
                                </div>
                            </center>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
